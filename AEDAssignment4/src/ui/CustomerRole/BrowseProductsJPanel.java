/*
 * BrowseProducts.java
 *
 * Created on October 10, 2008, 9:10 AM
 */
package ui.CustomerRole;

import model.Product;
import model.Supplier;
import model.SupplierDirectory;
import ui.SupplierRole.ViewProductDetailJPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;




/**
 *
 * @author Rushabh
 */
public class BrowseProductsJPanel extends javax.swing.JPanel {
        JPanel userProcessContainer;
        SupplierDirectory supplierDirectory;
       
    /** Creates new form BrowseProducts */
    public BrowseProductsJPanel(JPanel userProcessContainer, SupplierDirectory supplierDirectory) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.supplierDirectory=supplierDirectory;
       
        
      
        
      //  nm();
      
    }

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblProductCatalogue = new javax.swing.JLabel();
        btnProductDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductCatalog = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtminimum = new javax.swing.JTextField();
        firstAvailableCarBtn = new javax.swing.JButton();
        showdata = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnProductDetails1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 0, 204));
        setPreferredSize(new java.awt.Dimension(650, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(153, 0, 51));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, -1));

        lblProductCatalogue.setText("Patient Catalog:");
        add(lblProductCatalogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        btnProductDetails.setBackground(new java.awt.Color(255, 255, 255));
        btnProductDetails.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        btnProductDetails.setForeground(new java.awt.Color(153, 0, 51));
        btnProductDetails.setText("Abnormal Cases Based on Age ");
        btnProductDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductDetailsActionPerformed(evt);
            }
        });
        add(btnProductDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, 230, 50));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/download.jpg"))); // NOI18N
        jLabel1.setText("BP Analysis");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 280, 85));

        tblProductCatalog.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblProductCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Patient ID", "Enc ID", "Age", "Date", "BP Upper", "BP Lower", "Results", "City"
            }
        ));
        jScrollPane1.setViewportView(tblProductCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 984, 105));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Enter Age:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 410, -1, -1));

        txtminimum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtminimumActionPerformed(evt);
            }
        });
        add(txtminimum, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 410, 79, -1));

        firstAvailableCarBtn.setBackground(new java.awt.Color(255, 255, 255));
        firstAvailableCarBtn.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        firstAvailableCarBtn.setForeground(new java.awt.Color(153, 0, 51));
        firstAvailableCarBtn.setText("Show All Abnormal Cases");
        firstAvailableCarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstAvailableCarBtnActionPerformed(evt);
            }
        });
        add(firstAvailableCarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, 220, 50));

        showdata.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        showdata.setForeground(new java.awt.Color(153, 0, 51));
        showdata.setText("Show Data");
        showdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showdataActionPerformed(evt);
            }
        });
        add(showdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 140, 50));

        jLabel5.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setText("Search Using Filter :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bp-healthcare-pudu-health-care-blood-pressure-health-system-png-favpng-MtK5iufkZG5dDJVTu8wdqL6Pg.jpg"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 340, -1, 160));

        btnProductDetails1.setBackground(new java.awt.Color(255, 255, 255));
        btnProductDetails1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        btnProductDetails1.setForeground(new java.awt.Color(153, 0, 51));
        btnProductDetails1.setText("Abnormal Cases Based on City");
        btnProductDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductDetails1ActionPerformed(evt);
            }
        });
        add(btnProductDetails1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 230, 50));

        jLabel6.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("Enter City:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 520, -1, -1));

        txtcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcityActionPerformed(evt);
            }
        });
        add(txtcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 520, 79, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProductDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductDetailsActionPerformed
        // TODO add your handling code here:
       String n = "Abnormal";
       String sea = (txtminimum.getText());
       age(n,sea);
    }//GEN-LAST:event_btnProductDetailsActionPerformed

    private void firstAvailableCarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstAvailableCarBtnActionPerformed
        // TODO add your handling code here:
        String n = "Abnormal";
        data(n);
    }//GEN-LAST:event_firstAvailableCarBtnActionPerformed

    private void showdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showdataActionPerformed
        // TODO add your handling code here:
        nm();
    }//GEN-LAST:event_showdataActionPerformed

    private void btnProductDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductDetails1ActionPerformed
        // TODO add your handling code here:
        String n = "Abnormal";
       String c = (txtcity.getText());
       city(n,c);
    }//GEN-LAST:event_btnProductDetails1ActionPerformed

    private void txtminimumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtminimumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtminimumActionPerformed

    private void txtcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcityActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProductDetails;
    private javax.swing.JButton btnProductDetails1;
    private javax.swing.JButton firstAvailableCarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProductCatalogue;
    private javax.swing.JButton showdata;
    private javax.swing.JTable tblProductCatalog;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtminimum;
    // End of variables declaration//GEN-END:variables

    private void age(String n,String sea){
          DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);
        
        for( Supplier s: supplierDirectory.getSupplierlist()){
        for (Product p : s.getProductCatalog().getProductcatalog()) {
            
            if(p.getResults().equalsIgnoreCase(n)){
                if(s.getPersonAge().equals(sea) ){
            Object row[] = new Object[9];
            row[0] = p;
            row[1] = s.getPatientID();
            row[2] = p.getEncounterID();
            row[3] = s.getPersonAge();
            row[4] = p.getEncounterDate();
            row[5] = p.getBPUpper();
            row[6] = p.getBPLower();
            row[7] = p.getResults();
            row[8] = s.getCity();
            model.addRow(row);
            }
            }
        }


    }
    }
         private void city(String n,String c){
          DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);
        
        for( Supplier s: supplierDirectory.getSupplierlist()){
        for (Product p : s.getProductCatalog().getProductcatalog()) {
            
            if(p.getResults().equalsIgnoreCase(n)){
                if(s.getCity().equalsIgnoreCase(c)){
            Object row[] = new Object[9];
            row[0] = p;
            row[1] = s.getPatientID();
            row[2] = p.getEncounterID();
            row[3] = s.getPersonAge();
            row[4] = p.getEncounterDate();
            row[5] = p.getBPUpper();
            row[6] = p.getBPLower();
            row[7] = p.getResults();
            row[8] = s.getCity();
            model.addRow(row);
            }
            }
        }


    }
        
      
        
    }

    private void data(String n) {
        
        
         DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);
        
        for( Supplier s: supplierDirectory.getSupplierlist()){
        for (Product p : s.getProductCatalog().getProductcatalog()) {
            if(p.getResults().equalsIgnoreCase(n)){
            Object row[] = new Object[9];
            row[0] = p;
            row[1] = s.getPatientID();
            row[2] = p.getEncounterID();
            row[3] = s.getPersonAge();
            row[4] = p.getEncounterDate();
            row[5] = p.getBPUpper();
            row[6] = p.getBPLower();
            row[7] = p.getResults();
            row[8] = s.getCity();
            model.addRow(row);
        }
        }


    }}

     private void nm() {
        
        
         DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);
        
        for( Supplier s: supplierDirectory.getSupplierlist()){
        for (Product p : s.getProductCatalog().getProductcatalog()) {
            Object row[] = new Object[9];
            row[0] = p;
            row[1] = s.getPatientID();
            row[2] = p.getEncounterID();
            row[3] = s.getPersonAge();
            row[4] = p.getEncounterDate();
            row[5] = p.getBPUpper();
            row[6] = p.getBPLower();
            row[7] = p.getResults();
            row[8] = s.getCity();
            model.addRow(row);
        }
        }
     }
     
     
     
     
     
     
}





